// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Instance {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  createdById Int
  updatedAt   DateTime  @updatedAt
  updatedById Int
  deletedAt   DateTime?
  deletedById Int?

  name        String
  alias       String
  description String?
  active      Boolean @default(true)

  userInstances UserInstance[]

  @@map("instance")
}

model User {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  createdById Int
  updatedAt   DateTime  @updatedAt
  updatedById Int
  deletedAt   DateTime?
  deletedById Int?

  firstName  String
  middleName String?
  lastName   String
  email      String  @unique
  password   String
  active     Boolean @default(true)

  userInstances UserInstance[]

  @@map("user")
}

model UserInstance {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  createdById Int
  updatedAt   DateTime  @updatedAt
  updatedById Int
  deletedAt   DateTime?
  deletedById Int?

  fkUserId     Int
  fkInstanceId Int

  user     User     @relation(fields: [fkUserId], references: [id])
  instance Instance @relation(fields: [fkInstanceId], references: [id])

  @@map("user_instance")
}
